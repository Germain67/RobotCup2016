#define LEFT 0
#define RIGHT 1
#define FORWARD 2
#define BACKWARD 3
#define SPEED 100

mutex moveMutex;

void InitLightSensor(){
  SetSensorLight(IN_3);
}

void InitUltraSonicSensor(){
  SetSensorLowspeed(IN_4);
}

void InitBumpers(){
  SetSensorTouch(IN_1);
  SetSensorTouch(IN_2);
}

void displayLightSensorValue(){
  TextOut(10,LCD_LINE1,"LightSensor value : ");
  TextOut(10,LCD_LINE2,NumToStr(Sensor(IN_3)));
}

void displayUltraSonicSensorValue(){
  TextOut(10,LCD_LINE1,"UltraSonic value : ");
  TextOut(10,LCD_LINE2,NumToStr(SensorUS(IN_4)));
}

void StopRobot(){
   Off(OUT_AC);
}

void Beep(){
  PlayTone(1000,1000);
  Wait(1000);
}

void move(int direction, int delay, int power){
     if(direction == LEFT){
       OnFwd(OUT_C, power);
       OnRev(OUT_A, power);
     }
     else if(direction == RIGHT)
     {
       OnFwd(OUT_A, power);
       OnRev(OUT_C, power);
     }
     else if(direction == FORWARD)
     {
       OnFwd(OUT_AC, power);
     }
     else if(direction == BACKWARD)
     {
       OnRev(OUT_AC, power);
     }
     Wait(delay);
     StopRobot();
}

task collectGems(){
  while(true){
    OnFwd(OUT_B, 100);
    Wait(2000);
    OnRev(OUT_B, 100);
    Wait(500);
  }
}

task routine(){
 while(true){
    //Check for obstacle
    if(SensorUS(IN_4) < 30)
    {
      Acquire(moveMutex);
      StopRobot();
      Beep();
      move(RIGHT, 500, SPEED);
      Release(moveMutex);
    }
    //Bump into obstacle
    if(SENSOR_1 == 1 || SENSOR_2 == 1){
      Acquire(moveMutex);
      StopRobot();
      Beep();
      move(BACKWARD, 1000, SPEED);
      move(RIGHT, 500, SPEED);
      Release(moveMutex);
    }
    //Check for boundary
    if(Sensor(IN_3) > 40){
      Acquire(moveMutex);
      StopRobot();
      Beep();
      move(BACKWARD, 1000, SPEED);
      move(RIGHT, 1000, SPEED);
      Release(moveMutex);
    }
    //Check for black zone
    if(Sensor(IN_3) < 25){
      Acquire(moveMutex);
      StopRobot();
      move(FORWARD, 500 , SPEED);
      Beep();
      Beep();
      Beep();
      Release(moveMutex);
      break;
    }

    //Debug
    displayLightSensorValue();
  }
  Stop(true);
}

task goForward(){
  //Move
  while(true){
    Acquire(moveMutex);
    Release(moveMutex);
    move(FORWARD, 1000 , SPEED);
  }
}


void initialize(){
  InitBumpers();
  InitUltraSonicSensor();
  InitLightSensor();
}

task main(){
  initialize();
  Precedes(routine, collectGems, goForward);
}
