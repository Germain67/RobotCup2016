#define LEFT 0
#define RIGHT 1
#define FORWARD 2
#define BACKWARD 3
#define SPEED 100

bool end = false;
int time = 0;
int nbHit = 0;
int lastMove;
mutex moveMutex;

void InitLightSensor(){
  SetSensorLight(IN_3);
}

void InitUltraSonicSensor(){
  SetSensorLowspeed(IN_4);
}

void InitBumpers(){
  SetSensorTouch(IN_1);
  SetSensorTouch(IN_2);
}

void displayLightSensorValue(){
  TextOut(10,LCD_LINE1,"LightSensor value : ");
  TextOut(10,LCD_LINE2,NumToStr(Sensor(IN_3)));
}

void displayUltraSonicSensorValue(){
  TextOut(10,LCD_LINE1,"UltraSonic value : ");
  TextOut(10,LCD_LINE2,NumToStr(SensorUS(IN_4)));
}

void StopRobot(){
   Off(OUT_AC);
}

task Beep(){
  PlayTone(1000,1000);
  Wait(1000);
}

void specialBeep(){
  PlayTone(1500,1000);
  Wait(1000);
  PlayTone(2000,1000);
  Wait(1000);
  PlayTone(2500,1000);
  Wait(1000);
}

void move(int direction, int delay, int power){
     if(direction == LEFT){
       OnFwd(OUT_C, power);
       OnRev(OUT_A, power);
     }
     else if(direction == RIGHT)
     {
       OnFwd(OUT_A, power);
       OnRev(OUT_C, power);
     }
     else if(direction == FORWARD)
     {
       OnFwd(OUT_AC, power);
     }
     else if(direction == BACKWARD)
     {
       OnRev(OUT_AC, power);
     }
     Wait(delay);
     StopRobot();
}

task collectGems(){
  while(!end){
    OnFwd(OUT_B, 100);
    Wait(2000);
    OnRev(OUT_B, 50);
    Wait(1000);
  }
}

void finishProgram(){
  specialBeep();
  end = true;
}

int randomDirection(){
  int r = Random(2);
  if(r==0){
    return LEFT;
  }
  else{
    return RIGHT;
  }
}

task routine(){
 while(!end){
   //Check for black zone
   if(Sensor(IN_3) < 25 && time > 120){
      Acquire(moveMutex);
      StopRobot();
      move(FORWARD, 500 , SPEED);
      finishProgram();
      Release(moveMutex);
      break;
   }
   //Check for boundary
    if(Sensor(IN_3) > 40){
      Acquire(moveMutex);
      StopRobot();
      //StartTask(Beep);
      move(BACKWARD, 1000, SPEED);
      if(nbHit == 0){
        lastMove = randomDirection();
        nbHit++;
      }
      move(lastMove, 2000, SPEED);
      Release(moveMutex);
    }
   //Bump into obstacle
    if(SENSOR_1 == 1 || SENSOR_2 == 1){
      Acquire(moveMutex);
      nbHit = 0;
      StopRobot();
      //StartTask(Beep);
      move(BACKWARD, 1000, SPEED);
      move(randomDirection(), 1500, SPEED);
      Release(moveMutex);
    }
    //Check for obstacle
    if(SensorUS(IN_4) < 40)
    {
      Acquire(moveMutex);
      nbHit = 0;
      StopRobot();
      //StartTask(Beep);
      move(randomDirection(), 1500, SPEED);
      Release(moveMutex);
    }
  }
}

task goForward(){
  //Move
  while(!end){
    Acquire(moveMutex);
    Release(moveMutex);
    move(FORWARD, 5000 ,SPEED);
  }
}

task countTime(){
  while(!end){
    time += 1;
    TextOut(5,LCD_LINE3,"Elapsed Time : ");
    TextOut(5,LCD_LINE4,NumToStr(time) + " seconds");
  }
}

task pacmanBeginning(){
  PlayFileEx("pacman_beginnin.rso",7,FALSE);
  Wait(5000);
}

void initialize(){
  InitBumpers();
  InitUltraSonicSensor();
  InitLightSensor();
}

task main(){
  initialize();
  //Precedes(pacmanBeginning);
  Precedes(routine, collectGems, goForward);
}
